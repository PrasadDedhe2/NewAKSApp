1. How does aks work in backend? DONE
2. What python things you have worked on? Remaining
3. How do you deploy (end to end) on kubernetes? DONE
4. How do you write YAML files for AKS? DONE
5. Python packages? OOPs concepts? Just revise
6. What is docker? DONE
7. Sql queries? Just revise
8. Daemonset, Deployment set, Dockerfile? DONE
9. How do you setup connection between ACR and the cluster? DONE
10. How do you deploy on AKS/kubernetes? DONE
11. Kubectl commands
	kubectl get pod -o wide --> gives info about pods with IP information
	kubectl get svc ---> Tells us about the services we have
	kubectl get endpoints <servicename>---> Tells us which pods the service is pointingto
	kubectl delete pod <pod-name>
	az aks update --name <your-aks-name> --resource-group <your-rg-name> --attach-acr <your-new-acr-name> --> Links new acr
	az aks update --name <your-aks-name> --resource-group <your-rg-name> --detach-acr <old-acr-name> --> removes old acr

12. Python data structures? Remaining
13. Why to use Kubernetes over others? DONE
14. How to find masternode over AKS? DONE
15. How to run a specific pod on a specific node in aks? DONE
16. How would you bind SSL in aks? DNS configuration for AKS? Remaining
17. How would you add SQL db for an app on kubernetes? Done
18. How to get number of pods running on a particular node --> 
		kubectl get pods --field-selector spec.nodeName=<node-name>  | grep -c "Running"




apiVersion: apps/v1
kind: Deployment
metadata:
  name: oap-oxp-deployment
spec:
  replicas: 15
  selector:
    matchLabels:
      app: oap-oxp
  template:
    metadata:
      labels:
        app: oap-oxp
    spec:
      containers:
        - name: oap-container
          image: prasad\\'sacr.azurecr.io/oap-image:v1.0
          env:
            - name: SQL_SERVER_NAME
              value: <your-sql-server-name>.database.windows.net
            - name: SQL_DB_NAME
              value: user-database
            - name: SQL_USER
              valueFrom:
                secretKeyRef:
                  name: sql-secrets  # The name of your Kubernetes Secret
                  key: sql-username
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sql-secrets  # The name of your Kubernetes Secret
                  key: sql-password
        - name: oxp-container
          image: prasad\\'sacr.azurecr.io/oxp-image:v1.0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 5



apiVersion: v1
kind: Service
metadata:
  name: oap-clusterip-service
spec:
  selector:
    app: oap-oxp  # Match labels of your pods
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080  # The port your application listens on inside the pod


apiVersion: v1
kind: Service
metadata:
  name: oap-loadbalancer-service
spec:
  selector:
    app: oap-oxp  # Match labels of your pods
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080  # The port your application listens on inside the pod
  type: LoadBalancer


apiVersion: v1
kind: Service
metadata:
  name: my-loadbalancer-service
spec:
  selector:
    app: oap-oxp  # Match labels of your pods
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080  # The port your application listens on inside the pod
  type: LoadBalancer
  loadBalancerIP: <your-azure-loadbalancer-ip>


